Proposed by RiMS
Possible CHALLENGE 0009
----------------------
(I omitted accents)

This challenge is going to sound a bit strange but what I'm asking is quite simple: it involves encrypting or compressing a common, wild ASCII text file (with DOS or UNIX line breaks) and performing the reverse process using the following method:

Since there are 127 ASCII characters (or 128 depending on who explains it), they are encoded in 8 bits, always having bit 7 at 0. Therefore, to take advantage of that bit, shifts will be made every eight BYTES so that they occupy seven Bytes. If it happens that the text has a number of characters that is not divisible by 8, the other bits of the BYTE are simply filled with 0 and the process is finished.

The way the program is coded would be completely free and I can only give you a suggestion of how I would like it to work:
From the prompt write CHALLENGE0009 flag InputFile OutputFile
for example:
	CHALLENGE0009 C test.txt Output.enc (to compress the file test.txt and generate the file output.enc)
	CHALLENGE0009 D Output.enc test.txt (to decompress the file output.enc)

Well, let's see if you understand what I'm asking with an example:
"RETO0009 JE" is an ASCII text of 11 characters (without the quotes, obviously).

At bit level it would be coded as follows:
 R         E         T         O         0         0         0         9         space     J         E
 82        69        84        79        48        48        48        57        32        74        69
 0101.0010 0100.0101 0101.0100 0101.1111 0011.0000 0011.0000 0011.0000 0011.1001 0010.0000 0100.1010 0100.0101
 *         *         *         *         *         *         *         *         *         *         *
By removing each 0 marked with * it should look like this:

1010.0101 0001.0110 1010.0101 1111.0110 0000.1100 0001.1000 0011.1001 0100.0001 0010.1010 0010.1000
^       ^        ^        ^        ^       ^        ^        ^        ^       ^        ^        ^^^
R       E        T        O        0       0        0        9        space   J        E        (padding 0 to complete BYTE)

I hope that it is clear and that it is not too confusing for a lot of people to get hooked... oh I forgot, by the way, it compresses, check that the file is pure ASCII. Otherwise, cancel.

I am studying the ICE grading method to see if I understand but I ask please if someone who is not participating helps me grade the answers because above all it seems to me that it will be difficult for me to connect to the internet during the week...